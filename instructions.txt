Remote SDK instructions

The SDK comes with a sample application that demonstrates how to use the library. To open the sample application follow these steps:

1. Launch Android Studio
2. Select File->New->Import Project..., and select the folder that contains this instructions.txt file
3. Build project
4. Run project 

Make sure you have installed Android SDK version 27 since that is what sample application uses.

The sample application consists of a single java file called MainActivity.java. It initializes the library and creates connections to the devices and shows downlink throuhgput value for each device. Devices can also be controlled by clicking on them. The MainActivity.java contains comments for each step that is required to perform those actions, you can simply search for texts "Step 1", "Step 2", etc. to follow the flow of the application.

In addition the SDK contains a doc folder which contains JavaDoc detailed documentation of the complete API. 

Further, SDK contains the latest parameters.config file that can be used as a reference for parameter ID values. All parameters reported by the UE have unique ID numbers that can be mapped using the config file. Config file also has additional information about each parameter, such as its type (int/double/...), name, unit, etc.

To add the library to other projects follow the typical steps how to add .aar to Android project:

1. Launch Android Studio
2. Open the project you want to add the library to
3. Select File->New->New Module...
4. Select "Import .JAR/.AAR Package"
5. Browse redx-release.aar and remote-release.aar files from under the RemoteSDK/redx-release and RemoteSDK/remote-release folders
6. Android Studio will create the required project stubs and library is ready for use



